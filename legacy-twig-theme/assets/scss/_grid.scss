// grid settings
$columns: 12;

$gutters: (
	mobile: 20px,
	mobile-outer: 30px,
	desktop: 50px,
	desktop-outer: 80px
);

$container: (
	default: 1200px,
	slim: 1000px,
	xtra-slim: 800px,
	wide: 1400px,
	xtra-wide: 1600px,
	full-width: 'none'
);


// grid mixins
@mixin container($size: 'default') {
	// max-width: map-get($container, $size);
	max-width: 100%;
	margin: 0 auto;
	display: block;
	overflow: hidden;
	position: relative;
	width: 100%;
	padding-left: map-get($gutters, 'mobile-outer') - (map-get($gutters, 'mobile') / 2);
	padding-right: map-get($gutters, 'mobile-outer') - (map-get($gutters, 'mobile') / 2);

	@include bp($m) {
		padding-left: map-get($gutters, 'desktop-outer') - (map-get($gutters, 'desktop') / 2);
		padding-right: map-get($gutters, 'desktop-outer') - (map-get($gutters, 'desktop') / 2);
	}
}

@mixin span($span: $columns, $gutter: ""){
	min-height: 1px;
	float: left;
	box-sizing: border-box;

	padding-left: (map-get($gutters, 'mobile') / 2);
	padding-right: (map-get($gutters, 'mobile') / 2);

	@include bp($m) {
		padding-left: (map-get($gutters, 'desktop') / 2);
		padding-right: (map-get($gutters, 'desktop') / 2);
	}

	@if( $gutter == no-gutter ){
		padding-left: 0;
		padding-right: 0;

		@include bp($m) {
			padding-left: 0;
			padding-right: 0;
		}
	}

	@if($span < 1){
		width: percentage($span);
	} @else {
		width: percentage($span/$columns);
	}
}

@mixin push($span: 1){
	@if($span < 1){
		margin-left: percentage($span);
	} @else {
		margin-left: percentage($span/$columns);
	}
}

@mixin pull($span: 1){
	@if($span < 1){
		margin-left: -( percentage($span) );
	} @else {
		margin-left: -( percentage($span/$columns) );
	}
}
